ets Jul 29 2019 12:21:46

rst:0x3 (SW_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_d
rv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:7000
load:0x40078000,len:15452
ho 0 tail 12 room 4
load:0x40080400,len:3840
entry 0x4008064c
I (29) boot: ESP-IDF v5.0-dirty 2nd stage bootloader
I (29) boot: compile time 08:23:45
I (29) boot: chip revision: v3.0
I (32) boot_comm: chip revision: 3, min. bootloader chip revisio
n: 0
I (39) boot.esp32: SPI Speed      : 40MHz
I (44) boot.esp32: SPI Mode       : DIO
I (48) boot.esp32: SPI Flash Size : 2MB
I (53) boot: Enabling RNG early entropy source...
I (58) boot: Partition Table:
I (62) boot: ## Label            Usage          Type ST Offset
 Length
I (69) boot:  0 nvs              WiFi data        01 02 00009000
 00006000
I (77) boot:  1 phy_init         RF data          01 01 0000f000
 00001000
I (84) boot:  2 factory          factory app      00 00 00010000
 00177000
I (92) boot: End of partition table
I (96) boot_comm: chip revision: 3, min. application chip revisi
on: 0
I (103) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size
=23b68h (146280) map
I (164) esp_image: segment 1: paddr=00033b90 vaddr=3ffb0000 size
=02930h ( 10544) load
I (169) esp_image: segment 2: paddr=000364c8 vaddr=40080000 size
=09b50h ( 39760) load
I (186) esp_image: segment 3: paddr=00040020 vaddr=400d0020 size
=6a5d0h (435664) map
I (344) esp_image: segment 4: paddr=000aa5f8 vaddr=40089b50 size
=020cch (  8396) load
I (348) esp_image: segment 5: paddr=000ac6cc vaddr=50000000 size
=00010h (    16) load
I (356) boot: Loaded app from partition at offset 0x10000
I (356) boot: Disabling RNG early entropy source...
I (373) cpu_start: Pro cpu up.
I (373) cpu_start: Starting app cpu, entry point is 0x4008112c
I (359) cpu_start: App cpu up.
I (387) cpu_start: Pro cpu start user code
I (387) cpu_start: cpu freq: 160000000 Hz
I (387) cpu_start: Application information:
I (392) cpu_start: Project name:     wolfssl_test
I (397) cpu_start: App version:      v5.6.0-stable-888-gf8af6b6b
7-di
I (404) cpu_start: Compile time:     May 23 2023 10:40:47
I (410) cpu_start: ELF file SHA256:  c3cc7b2f441989a2...
I (416) cpu_start: ESP-IDF:          v5.0-dirty
I (422) heap_init: Initializing. RAM available for dynamic alloc
ation:
I (429) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM
I (435) heap_init: At 3FFB3AC0 len 0002C540 (177 KiB): DRAM
I (441) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM
I (448) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM
I (454) heap_init: At 4008BC1C len 000143E4 (80 KiB): IRAM
I (462) spi_flash: detected chip: generic
I (465) spi_flash: flash io: dio
W (469) spi_flash: Detected size(4096k) larger than the size in
the binary image header(2048k). Using the size in the binary ima
ge header.
I (483) cpu_start: Starting scheduler on PRO CPU.
I (0) cpu_start: Starting scheduler on APP CPU.
I (503) wolfssl_test: ------------------------------------------
--------------
I (503) wolfssl_test: ------------------------------------------
--------------
I (503) wolfssl_test: ---------------------- BEGIN MAIN --------
--------------
I (503) wolfssl_test: ------------------------------------------
--------------
I (513) wolfssl_test: ------------------------------------------
--------------
I (523) esp32_util: Extended Version and Platform Information.
I (533) esp32_util: LIBWOLFSSL_VERSION_STRING = 5.6.0
I (533) esp32_util: LIBWOLFSSL_VERSION_HEX = 5006000
I (543) esp32_util: LIBWOLFSSL_VERSION_GIT_ORIGIN = https://gith
ub.com/gojimmypi/wolfssl.git
I (553) esp32_util: LIBWOLFSSL_VERSION_GIT_BRANCH = ED25519_SHA2
_fix
I (553) esp32_util: LIBWOLFSSL_VERSION_GIT_HASH = f8af6b6b742a48
14ba3e675765e8b3d0d114b119
I (563) esp32_util: LIBWOLFSSL_VERSION_GIT_SHORT_HASH = f8af6b6b
7
I (573) esp32_util: LIBWOLFSSL_VERSION_GIT_HASH_DATE = 'Mon May
22 23:04:48 2023 -0700'
I (583) esp32_util: CONFIG_IDF_TARGET = esp32
I (583) esp32_util: CONFIG_ESP32_DEFAULT_CPU_FREQ_MHZ: 160 MHz
I (593) esp32_util: Xthal_have_ccount: 1
I (593) esp32_util: CONFIG_MAIN_TASK_STACK_SIZE: 50000
I (603) esp32_util: CONFIG_ESP_MAIN_TASK_STACK_SIZE: 50000
I (613) esp32_util: CONFIG_TIMER_TASK_STACK_SIZE: 3584
I (613) esp32_util: CONFIG_TIMER_TASK_STACK_DEPTH: 2048
I (623) esp32_util: Stack HWM: 48656
I (623) esp32_util: ESP32WROOM32_CRYPT is enabled for ESP32.
I (633) esp32_util: NOT SINGLE_THREADED
I (633) wolfssl_test: CONFIG_ESP32_DEFAULT_CPU_FREQ_MHZ = 160 MH
z
I (643) wolfssl_test: Xthal_have_ccount = 1
I (643) wolfssl_test: Stack HWM: 48656

I (653) wolfssl_test: ESP32WROOM32_CRYPT is enabled.
----------------------------------------------------------------
--------------
 wolfSSL version 5.6.0
----------------------------------------------------------------
--------------
error    test passed!
MEMORY   test passed!
mp       test passed!
I (7493) wolfcrypt_test: Begin math_test()
I (7493) wolfcrypt_test: CheckRunTimeFastMath() =  136
I (7493) wolfcrypt_test: FP_SIZE   =  136
I (7493) wolfcrypt_test: DIGIT_BIT =  32
I (7503) wolfcrypt_test: Begin math_test_challenge_1()
I (7513) wolfcrypt_test: Success: mp_mulmod() : challenge:
32 word test, positive operands: a * b mod c
I (7513) wolfcrypt_test: Success: mp_mulmod() : a * b mod c chec
k: 4
I (7523) wolfcrypt_test: Success: mp_mulmod() : 32 word test, po
sitive operands: a * b mod c
I (7533) MATH_INT_T:
I (7533) MATH_INT_T: Operand a.used = 32;
I (7543) MATH_INT_T: Operand a.sign = 0;
I (7543) MATH_INT_T:
I (7543) MATH_INT_T: Operand b.used = 32;
I (7553) MATH_INT_T: Operand b.sign = 0;
I (7553) MATH_INT_T:
I (7563) MATH_INT_T: Operand b.used = 32;
I (7563) MATH_INT_T: Operand b.sign = 0;
I (7573) wolfcrypt_test: Success: mp_mulmod() : two-word interim
 a * b mod c
I (7573) wolfcrypt_test: Success: fp_cmp on 0 == 0; used length
zero.
I (7583) wolfcrypt_test: Success: mp_init_load() byte order chec
k
I (7593) wolfcrypt_test: Success: mp_add on standard 1 + 1 check
I (7603) wolfcrypt_test: Success: mp_mulmod() : a * b mod c chec
k: 4
I (7603) wolfcrypt_test: Success: mp_mulmod() : two-word operand
s a * b mod c
I (7613) wolfcrypt_test: Success: mp_mulmod() : 8 word x 2 word
operands a * b mod c
I (7623) wolfcrypt_test: Success: mp_mulmod() : 32 word test, a
is negative: a * b mod c
I (7633) wolfcrypt_test: Success: mp_mulmod() : 32 Word HW Chall
enge: a * b mod c
I (7633) wolfcrypt_test: Math test completed.
mp_math  test passed!
I (7643) wolfssl: Bad Base64 Decode data, too small
I (7653) wolfssl: Bad Base64 Decode data, too small
I (7653) wolfssl: Bad Base64 Decode data, too big
I (7663) wolfssl: Bad Base64 Decode data, too small
I (7663) wolfssl: Bad Base64 Decode data, too big
I (7673) wolfssl: Bad Base64 Decode data, too small
I (7673) wolfssl: Bad Base64 Decode data, too big
I (7683) wolfssl: Bad Base64 Decode data, too small
I (7693) wolfssl: Bad Base64 Decode data, too big
I (7693) wolfssl: Bad Base64 Decode data, too small
I (7703) wolfssl: Bad Base64 Decode data, too small
I (7703) wolfssl: Bad Base64 Decode data, too small
I (7713) wolfssl: Bad Base64 Decode data, too small
I (7713) wolfssl: Bad Base64 Decode data, too small
I (7723) wolfssl: Bad Base64 Decode data, too small
I (7723) wolfssl: Bad Base64 Decode data, too small
I (7733) wolfssl: Bad Base64 Decode data, too small
I (7743) wolfssl: Bad Base64 Decode data, too small
I (7743) wolfssl: Bad Base64 Decode data, too small
I (7753) wolfssl: Bad Base64 Decode data, too small
I (7753) wolfssl: Bad Base64 Decode data, too small
I (7763) wolfssl: Bad end of line in Base64 Decode
I (7763) wolfssl: Bad Base64 Decode data, too small
I (7773) wolfssl: Bad Base64 Decode data, too small
I (7773) wolfssl: Bad Base64 Decode data, too small
I (7783) wolfssl: Bad Base64 Decode data, too small
I (7793) wolfssl: Bad Base64 Decode data, too small
I (7793) wolfssl: Bad Base64 Decode data, too small
I (7803) wolfssl: Bad Base64 Decode data, too small
I (7803) wolfssl: Bad Base64 Decode data, too small
I (7813) wolfssl: Bad Base64 Decode data, too small
I (7813) wolfssl: Bad Base64 Decode data, too small
I (7823) wolfssl: Bad Base64 Decode data, too small
I (7823) wolfssl: Bad Base64 Decode data, too small
I (7833) wolfssl: Bad Base64 Decode data, too small
I (7843) wolfssl: Bad Base64 Decode data, too small
I (7843) wolfssl: Bad Base64 Decode data, too small
I (7853) wolfssl: Bad Base64 Decode data, too small
I (7853) wolfssl: Bad Base64 Decode data, too small
I (7863) wolfssl: Bad Base64 Decode data, too small
I (7863) wolfssl: Bad Base64 Decode data, too small
I (7873) wolfssl: Bad Base64 Decode data, too small
I (7873) wolfssl: Bad Base64 Decode data, too small
I (7883) wolfssl: Bad Base64 Decode data, too small
I (7893) wolfssl: Bad Base64 Decode data, too small
I (7893) wolfssl: Bad Base64 Decode data, too small
I (7903) wolfssl: Bad Base64 Decode data, too small
I (7903) wolfssl: Bad Base64 Decode data, too small
I (7913) wolfssl: Bad Base64 Decode data, too small
I (7913) wolfssl: Bad Base64 Decode data, too small
I (7923) wolfssl: Bad Base64 Decode data, too small
I (7923) wolfssl: Bad Base64 Decode bad character
I (7933) wolfssl: Bad Base64 Decode bad character
I (7943) wolfssl: Bad Base64 Decode bad character
I (7943) wolfssl: Bad Base64 Decode bad character
I (7953) wolfssl: Bad Base64 Decode bad character
I (7953) wolfssl: Bad Base64 Decode bad character
I (7963) wolfssl: Bad Base64 Decode bad character
I (7963) wolfssl: Bad Base64 Decode bad character
I (7973) wolfssl: Bad Base64 Decode bad character
I (7973) wolfssl: Bad Base64 Decode bad character
I (7983) wolfssl: Bad Base64 Decode bad character
I (7983) wolfssl: Bad Base64 Decode bad character
I (7993) wolfssl: Bad Base64 Decode bad character
I (7993) wolfssl: Bad Base64 Decode bad character
I (8003) wolfssl: Bad Base64 Decode bad character
I (8013) wolfssl: Bad Base64 Decode bad character
I (8013) wolfssl: Bad Base64 Decode data, too big
I (8023) wolfssl: Bad Base64 Decode data, too big
I (8023) wolfssl: Bad Base64 Decode data, too big
I (8033) wolfssl: Bad Base64 Decode data, too big
I (8033) wolfssl: Bad Base64 Decode data, too big
I (8043) wolfssl: Bad Base64 Decode data, too big
I (8043) wolfssl: Bad Base64 Decode data, too big
I (8053) wolfssl: Bad Base64 Decode data, too big
I (8053) wolfssl: Bad Base64 Decode data, too big
I (8063) wolfssl: Bad Base64 Decode data, too big
I (8063) wolfssl: Bad Base64 Decode data, too big
I (8073) wolfssl: Bad Base64 Decode data, too big
I (8083) wolfssl: Bad Base64 Decode data, too big
I (8083) wolfssl: Bad Base64 Decode data, too big
I (8093) wolfssl: Bad Base64 Decode data, too big
I (8093) wolfssl: Bad Base64 Decode data, too big
I (8103) wolfssl: Bad Base64 Decode data, too big
I (8103) wolfssl: Bad Base64 Decode data, too big
I (8113) wolfssl: Bad Base64 Decode data, too big
I (8113) wolfssl: Bad Base64 Decode data, too big
I (8123) wolfssl: Bad Base64 Decode data, too big
I (8123) wolfssl: Bad Base64 Decode data, too big
I (8133) wolfssl: Bad Base64 Decode data, too big
I (8133) wolfssl: Bad Base64 Decode data, too big
I (8143) wolfssl: Bad Base64 Decode data, too big
I (8153) wolfssl: Bad Base64 Decode data, too big
I (8153) wolfssl: Bad Base64 Decode data, too big
I (8163) wolfssl: Bad Base64 Decode data, too big
I (8163) wolfssl: Bad Base64 Decode data, too big
I (8173) wolfssl: Bad Base64 Decode data, too big
I (8173) wolfssl: Bad Base64 Decode data, too big
I (8183) wolfssl: Bad Base64 Decode data, too big
I (8183) wolfssl: Bad Base64 Decode data, too big
I (8193) wolfssl: Bad Base64 Decode data, too big
I (8193) wolfssl: Bad Base64 Decode data, too big
I (8203) wolfssl: Bad Base64 Decode data, too big
I (8203) wolfssl: Bad Base64 Decode data, too big
I (8213) wolfssl: Bad Base64 Decode data, too big
I (8223) wolfssl: Bad Base64 Decode data, too big
I (8223) wolfssl: Bad Base64 Decode data, too big
I (8233) wolfssl: Bad Base64 Decode data, too big
I (8233) wolfssl: Bad Base64 Decode data, too big
I (8243) wolfssl: Bad Base64 Decode data, too big
I (8243) wolfssl: Bad Base64 Decode data, too big
I (8253) wolfssl: Bad Base64 Decode data, too big
I (8253) wolfssl: Bad Base64 Decode data, too big
I (8263) wolfssl: Bad Base64 Decode data, too big
I (8263) wolfssl: Bad Base64 Decode data, too big
I (8273) wolfssl: Bad Base64 Decode data, too big
I (8273) wolfssl: Bad Base64 Decode data, too big
I (8283) wolfssl: Bad Base64 Decode data, too big
I (8293) wolfssl: Bad Base64 Decode data, too big
I (8293) wolfssl: Bad Base64 Decode data, too big
I (8303) wolfssl: Bad Base64 Decode data, too big
I (8303) wolfssl: Bad Base64 Decode data, too big
I (8313) wolfssl: Bad Base64 Decode data, too big
I (8313) wolfssl: Bad Base64 Decode data, too big
I (8323) wolfssl: Bad Base64 Decode data, too big
I (8323) wolfssl: Bad Base64 Decode data, too big
I (8333) wolfssl: Bad Base64 Decode data, too big
I (8333) wolfssl: Bad Base64 Decode data, too big
I (8343) wolfssl: Bad Base64 Decode data, too big
I (8343) wolfssl: Bad Base64 Decode data, too big
I (8353) wolfssl: Bad Base64 Decode data, too big
I (8363) wolfssl: Bad Base64 Decode data, too big
I (8363) wolfssl: Bad Base64 Decode data, too big
I (8373) wolfssl: Bad Base64 Decode data, too big
I (8373) wolfssl: Bad Base64 Decode data, too big
I (8383) wolfssl: Bad Base64 Decode data, too big
I (8383) wolfssl: Bad Base64 Decode data, too big
I (8393) wolfssl: Bad Base64 Decode data, too big
I (8393) wolfssl: Bad Base64 Decode data, too big
I (8403) wolfssl: Bad Base64 Decode data, too big
I (8403) wolfssl: Bad Base64 Decode data, too big
I (8413) wolfssl: Bad Base64 Decode data, too big
I (8413) wolfssl: Bad Base64 Decode data, too big
I (8423) wolfssl: Bad Base64 Decode data, too big
I (8433) wolfssl: Bad Base64 Decode data, too big
I (8433) wolfssl: Bad Base64 Decode data, too big
I (8443) wolfssl: Bad Base64 Decode data, too big
I (8443) wolfssl: Bad Base64 Decode data, too big
I (8453) wolfssl: Bad Base64 Decode data, too big
I (8453) wolfssl: Bad Base64 Decode data, too big
I (8463) wolfssl: Bad Base64 Decode data, too big
I (8463) wolfssl: Bad Base64 Decode data, too big
I (8473) wolfssl: Bad Base64 Decode data, too big
I (8473) wolfssl: Bad Base64 Decode data, too big
I (8483) wolfssl: Bad Base64 Decode data, too big
I (8483) wolfssl: Bad Base64 Decode data, too big
I (8493) wolfssl: Bad Base64 Decode data, too big
I (8493) wolfssl: Bad Base64 Decode data, too big
I (8503) wolfssl: Bad Base64 Decode data, too big
I (8513) wolfssl: Bad Base64 Decode data, too big
I (8513) wolfssl: Bad Base64 Decode data, too big
I (8523) wolfssl: Bad Base64 Decode data, too big
I (8523) wolfssl: Bad Base64 Decode data, too big
I (8533) wolfssl: Bad Base64 Decode data, too big
I (8533) wolfssl: Bad Base64 Decode data, too big
I (8543) wolfssl: Bad Base64 Decode data, too big
I (8543) wolfssl: Bad Base64 Decode data, too big
I (8553) wolfssl: Bad Base64 Decode data, too big
I (8553) wolfssl: Bad Base64 Decode data, too big
I (8563) wolfssl: Bad Base64 Decode data, too big
I (8563) wolfssl: Bad Base64 Decode data, too big
I (8573) wolfssl: Bad Base64 Decode data, too big
I (8583) wolfssl: Bad Base64 Decode data, too big
I (8583) wolfssl: Bad Base64 Decode data, too big
I (8593) wolfssl: Bad Base64 Decode data, too big
I (8593) wolfssl: Bad Base64 Decode data, too big
I (8603) wolfssl: Bad Base64 Decode data, too big
I (8603) wolfssl: Bad Base64 Decode data, too big
I (8613) wolfssl: Bad Base64 Decode data, too big
I (8613) wolfssl: Bad Base64 Decode data, too big
I (8623) wolfssl: Bad Base64 Decode data, too big
I (8623) wolfssl: Bad Base64 Decode data, too big
I (8633) wolfssl: Bad Base64 Decode data, too big
I (8633) wolfssl: Bad Base64 Decode data, too big
I (8643) wolfssl: Bad Base64 Decode data, too big
I (8653) wolfssl: Bad Base64 Decode data, too big
I (8653) wolfssl: Bad Base64 Decode data, too big
I (8663) wolfssl: Bad Base64 Decode data, too big
I (8663) wolfssl: Bad Base64 Decode data, too big
I (8673) wolfssl: Bad Base64 Decode data, too big
I (8673) wolfssl: Bad Base64 Decode data, too big
I (8683) wolfssl: Bad Base64 Decode data, too big
I (8683) wolfssl: Bad Base64 Decode data, too big
I (8693) wolfssl: Bad Base64 Decode data, too big
I (8693) wolfssl: Bad Base64 Decode data, too big
I (8703) wolfssl: Bad Base64 Decode data, too big
I (8703) wolfssl: Bad Base64 Decode data, too big
I (8713) wolfssl: Bad Base64 Decode data, too big
I (8723) wolfssl: Bad Base64 Decode data, too big
I (8723) wolfssl: Bad Base64 Decode data, too big
I (8733) wolfssl: Escape buffer max too small
base64   test passed!
asn      test passed!
RANDOM   test passed!
MD5      test passed!
MD4      test passed!
SHA      test passed!
SHA-224  test passed!
SHA-256  test passed!
SHA-384  test passed!
SHA-512  test passed!
SHA-512/224  test passed!
SHA-512/256  test passed!
SHA-3    test passed!
SHAKE128 test passed!
SHAKE256 test passed!
Hash     test passed!
RIPEMD   test passed!
HMAC-MD5 test passed!
HMAC-SHA test passed!
HMAC-SHA224 test passed!
HMAC-SHA256 test passed!
HMAC-SHA384 test passed!
HMAC-SHA512 test passed!
HMAC-SHA3   test passed!
HMAC-KDF    test passed!
TLSv1.3 KDF test passed!
X963-KDF    test passed!
GMAC     test passed!
DES      test passed!
DES3     test passed!
AES      test passed!
AES192   test passed!
AES256   test passed!
AES-GCM  test passed!
AES Key Wrap test passed!
I (10333) wolfssl: GetLength - value exceeds buffer length
I (10333) wolfssl: GetLength - value exceeds buffer length
I (10333) wolfssl: GetLength - value exceeds buffer length
I (10343) wolfssl: GetLength - value exceeds buffer length
I (10343) wolfssl: GetLength - value exceeds buffer length
I (10353) wolfssl: GetLength - value exceeds buffer length
I (10363) wolfssl: GetLength - bad index on input
I (10363) wolfssl: wc_SignatureGetSize: Invalid RsaKey key size
I (15133) wolfssl: RSA Signature Verify failed!
I (26653) wolfssl: wolfSSL Using RSA OAEP padding
I (28953) wolfssl: wolfSSL Using RSA OAEP un-padding
I (28953) wolfssl: wolfSSL Using RSA OAEP padding
I (31253) wolfssl: wolfSSL Using RSA OAEP un-padding
I (33513) wolfssl: wolfSSL Using RSA OAEP un-padding
I (33513) wolfssl: wolfSSL Using RSA OAEP padding
I (35813) wolfssl: wolfSSL Using RSA OAEP un-padding
I (35813) wolfssl: wolfSSL Using RSA OAEP padding
I (38113) wolfssl: wolfSSL Using RSA OAEP un-padding
I (38113) wolfssl: wolfSSL Using RSA OAEP padding
I (40413) wolfssl: wolfSSL Using RSA OAEP un-padding
I (40413) wolfssl: wolfSSL Using RSA OAEP padding
I (42713) wolfssl: wolfSSL Using RSA OAEP un-padding
I (88723) wolfssl: Date BEFORE check failed
I (88723) wolfssl: Getting Cert Name
I (88723) wolfssl: Getting Cert Name
I (88723) wolfssl: wolfSSL Entering GetAlgoId
I (88733) wolfssl: wolfSSL Entering DecodeCertExtensions
I (88743) wolfssl: wolfSSL Entering DecodeSubjKeyId
I (88743) wolfssl: wolfSSL Entering DecodeAuthKeyId
I (88753) wolfssl: wolfSSL Entering DecodeBasicCaConstraints
I (88753) wolfssl: wolfSSL Entering DecodeAltNames
I (88763) wolfssl:      Unsupported name type, skipping
I (88763) wolfssl: wolfSSL Entering DecodeExtKeyUsage
I (88773) wolfssl: Date BEFORE check failed
I (88773) wolfssl: Getting Cert Name
I (88783) wolfssl: Getting Cert Name
I (88783) wolfssl: wolfSSL Entering GetAlgoId
I (88793) wolfssl: wolfSSL Entering DecodeCertExtensions
I (88793) wolfssl: wolfSSL Entering DecodeSubjKeyId
I (88803) wolfssl: wolfSSL Entering DecodeAuthKeyId
I (88803) wolfssl: wolfSSL Entering DecodeBasicCaConstraints
I (88813) wolfssl: wolfSSL Entering DecodeAltNames
I (88823) wolfssl:      Unsupported name type, skipping
I (88823) wolfssl: wolfSSL Entering DecodeExtKeyUsage
I (91113) wolfssl: Date BEFORE check failed
I (91113) wolfssl: Getting Cert Name
I (91113) wolfssl: Getting Cert Name
I (91113) wolfssl: wolfSSL Entering GetAlgoId
I (91113) wolfssl: wolfSSL Entering DecodeCertExtensions
I (91123) wolfssl: wolfSSL Entering DecodeSubjKeyId
I (91123) wolfssl: wolfSSL Entering DecodeAuthKeyId
I (91133) wolfssl: wolfSSL Entering DecodeBasicCaConstraints
I (91143) wolfssl: wolfSSL Entering DecodeAltNames
I (91143) wolfssl:      Unsupported name type, skipping
I (91153) wolfssl: wolfSSL Entering DecodeExtKeyUsage
I (91153) wolfssl: Date BEFORE check failed
I (91163) wolfssl: Getting Cert Name
I (91163) wolfssl: Getting Cert Name
I (91173) wolfssl: wolfSSL Entering GetAlgoId
I (91173) wolfssl: wolfSSL Entering DecodeCertExtensions
I (91183) wolfssl: wolfSSL Entering DecodeSubjKeyId
I (91183) wolfssl: wolfSSL Entering DecodeAuthKeyId
I (91193) wolfssl: wolfSSL Entering DecodeBasicCaConstraints
I (91203) wolfssl: wolfSSL Entering DecodeAltNames
I (91203) wolfssl:      Unsupported name type, skipping
I (91213) wolfssl: wolfSSL Entering DecodeExtKeyUsage
I (95763) wolfssl: wolfSSL Using RSA PSS padding
I (98063) wolfssl: wolfSSL Using RSA PSS un-padding
I (98063) wolfssl: wolfSSL Using RSA PSS padding
I (100363) wolfssl: wolfSSL Using RSA PSS un-padding
I (100363) wolfssl: wolfSSL Using RSA PSS padding
I (102663) wolfssl: wolfSSL Using RSA PSS un-padding
I (102663) wolfssl: wolfSSL Using RSA PSS padding
I (104963) wolfssl: wolfSSL Using RSA PSS un-padding
I (104963) wolfssl: wolfSSL Using RSA PSS padding
I (107263) wolfssl: wolfSSL Using RSA PSS un-padding
I (107263) wolfssl: wolfSSL Using RSA PSS padding
I (109563) wolfssl: wolfSSL Using RSA PSS un-padding
I (109563) wolfssl: wolfSSL Using RSA PSS padding
I (111863) wolfssl: wolfSSL Using RSA PSS un-padding
I (111863) wolfssl: wolfSSL Using RSA PSS padding
I (114163) wolfssl: wolfSSL Using RSA PSS un-padding
I (114163) wolfssl: wolfSSL Using RSA PSS padding
I (116463) wolfssl: wolfSSL Using RSA PSS un-padding
I (116463) wolfssl: wolfSSL Using RSA PSS padding
I (118763) wolfssl: wolfSSL Using RSA PSS un-padding
I (118763) wolfssl: wolfSSL Using RSA PSS padding
I (121063) wolfssl: wolfSSL Using RSA PSS un-padding
I (121063) wolfssl: wolfSSL Using RSA PSS padding
I (123363) wolfssl: wolfSSL Using RSA PSS un-padding
I (123373) wolfssl: wolfSSL Using RSA PSS padding
I (125663) wolfssl: wolfSSL Using RSA PSS un-padding
I (125673) wolfssl: wolfSSL Using RSA PSS padding
I (127963) wolfssl: wolfSSL Using RSA PSS un-padding
I (127973) wolfssl: wolfSSL Using RSA PSS padding
I (130263) wolfssl: wolfSSL Using RSA PSS un-padding
I (130273) wolfssl: wolfSSL Using RSA PSS padding
I (132573) wolfssl: wolfSSL Using RSA PSS un-padding
I (132573) wolfssl: wolfSSL Using RSA PSS padding
I (134873) wolfssl: wolfSSL Using RSA PSS un-padding
I (134873) wolfssl: wolfSSL Using RSA PSS padding
I (137173) wolfssl: wolfSSL Using RSA PSS un-padding
I (137173) wolfssl: wolfSSL Using RSA PSS padding
I (139473) wolfssl: wolfSSL Using RSA PSS un-padding
I (139473) wolfssl: wolfSSL Using RSA PSS padding
I (141773) wolfssl: wolfSSL Using RSA PSS un-padding
I (141773) wolfssl: wolfSSL Using RSA PSS padding
I (144073) wolfssl: wolfSSL Using RSA PSS un-padding
I (144073) wolfssl: wolfSSL Using RSA PSS padding
I (146373) wolfssl: wolfSSL Using RSA PSS un-padding
I (146373) wolfssl: wolfSSL Using RSA PSS padding
I (148673) wolfssl: wolfSSL Using RSA PSS un-padding
I (148673) wolfssl: wolfSSL Using RSA PSS padding
I (150973) wolfssl: wolfSSL Using RSA PSS un-padding
I (150973) wolfssl: wolfSSL Using RSA PSS padding
I (153273) wolfssl: wolfSSL Using RSA PSS un-padding
I (153273) wolfssl: wolfSSL Using RSA PSS padding
I (155573) wolfssl: wolfSSL Using RSA PSS un-padding
I (155603) wolfssl: wolfSSL Using RSA PSS un-padding
I (155603) wolfssl: wolfSSL Using RSA PSS padding
RSA      test passed!
PWDBASED test passed!
I (155863) wolfcrypt_test: ecc_test ECC_MIN_KEY_SZ = 224

I (155863) wolfssl: GetLength - value exceeds buffer length
I (155863) wolfcrypt_test: ecc_test_curve keySize = 28

I (165203) wolfssl: wolfSSL Leaving ecc_test_curve_size, return
0
I (169423) wolfssl: wolfSSL Entering wc_CreatePKCS8Key
I (169423) wolfssl: Checking size of PKCS8
I (169423) wolfssl: wolfSSL Leaving wc_CreatePKCS8Key, return -2
02
I (169433) wolfssl: wolfSSL Entering wc_CreatePKCS8Key
I (169443) wolfssl: wolfSSL Leaving wc_CreatePKCS8Key, return 60
I (169443) wolfcrypt_test: ecc_test_curve keySize = 30

I (179773) wolfssl: wolfSSL Leaving ecc_test_curve_size, return
0
I (182593) wolfssl: wolfSSL Entering wc_CreatePKCS8Key
I (182593) wolfssl: Checking size of PKCS8
I (182593) wolfssl: wolfSSL Leaving wc_CreatePKCS8Key, return -2
02
I (182603) wolfssl: wolfSSL Entering wc_CreatePKCS8Key
I (182603) wolfssl: wolfSSL Leaving wc_CreatePKCS8Key, return 65
I (182613) wolfcrypt_test: ecc_test_curve keySize = 32

E (184123) wolfssl_esp32_mp: mp_mul Z vs Z2 mismatch!
I (184123) wolfssl_esp32_mp: Xs            = 254
I (184123) wolfssl_esp32_mp: Ys            = 256
I (184123) wolfssl_esp32_mp: Zs            = 510
I (184133) wolfssl_esp32_mp: found_z_used  = 16
I (184133) wolfssl_esp32_mp: z.used        = 8
I (184143) wolfssl_esp32_mp: hwWords_sz    = 16
I (184143) wolfssl_esp32_mp: maxWords_sz   = 8
I (184153) wolfssl_esp32_mp: left_pad_offset = 64
I (184153) wolfssl_esp32_mp: hwWords_sz<<2   = 64
I (184163) MATH_INT_T: X:
I (184163) MATH_INT_T:
I (184163) MATH_INT_T: X.used = 8;
I (184173) MATH_INT_T: X.sign = 0;
I (184173) MATH_INT_T: X.dp[ 0] = 0x4643236e;  /*  0 */
I (184183) MATH_INT_T: X.dp[ 1] = 0xd023791e;  /*  1 */
I (184183) MATH_INT_T: X.dp[ 2] = 0x1dc432ab;  /*  2 */
I (184193) MATH_INT_T: X.dp[ 3] = 0x17d12a72;  /*  3 */
I (184203) MATH_INT_T: X.dp[ 4] = 0x62518f57;  /*  4 */
I (184203) MATH_INT_T: X.dp[ 5] = 0xc0dbff61;  /*  5 */
I (184213) MATH_INT_T: X.dp[ 6] = 0x5c81b049;  /*  6 */
I (184213) MATH_INT_T: X.dp[ 7] = 0x353ea4fc;  /*  7 */
I (184223) MATH_INT_T:
I (184223) MATH_INT_T: Y:
I (184233) MATH_INT_T:
I (184233) MATH_INT_T: Y.used = 8;
I (184233) MATH_INT_T: Y.sign = 0;
I (184243) MATH_INT_T: Y.dp[ 0] = 0x0b0df8ae;  /*  0 */
I (184243) MATH_INT_T: Y.dp[ 1] = 0x308db72d;  /*  1 */
I (184253) MATH_INT_T: Y.dp[ 2] = 0x76fca0a3;  /*  2 */
I (184263) MATH_INT_T: Y.dp[ 3] = 0x2aa4a880;  /*  3 */
I (184263) MATH_INT_T: Y.dp[ 4] = 0x296f7f92;  /*  4 */
I (184273) MATH_INT_T: Y.dp[ 5] = 0x908d20e3;  /*  5 */
I (184273) MATH_INT_T: Y.dp[ 6] = 0xb11c1dc1;  /*  6 */
I (184283) MATH_INT_T: Y.dp[ 7] = 0xf5e97df6;  /*  7 */
I (184293) MATH_INT_T:
I (184293) MATH_INT_T: Peek Z:
I (184293) MATH_INT_T:
I (184303) MATH_INT_T: Peek Z.used = 128;
I (184303) MATH_INT_T: Peek Z.sign = 0;
I (184303) MATH_INT_T: Peek Z.dp[ 0] = 0x00000000;  /*  0 */
I (184313) MATH_INT_T: Peek Z.dp[ 1] = 0x00000000;  /*  1 */
I (184323) MATH_INT_T: Peek Z.dp[ 2] = 0x00000000;  /*  2 */
I (184323) MATH_INT_T: Peek Z.dp[ 3] = 0x00000000;  /*  3 */
I (184333) MATH_INT_T: Peek Z.dp[ 4] = 0x00000000;  /*  4 */
I (184343) MATH_INT_T: Peek Z.dp[ 5] = 0x00000000;  /*  5 */
I (184343) MATH_INT_T: Peek Z.dp[ 6] = 0x00000000;  /*  6 */
I (184353) MATH_INT_T: Peek Z.dp[ 7] = 0x00000000;  /*  7 */
I (184363) MATH_INT_T: Peek Z.dp[ 8] = 0x00000000;  /*  8 */
I (184363) MATH_INT_T: Peek Z.dp[ 9] = 0x00000000;  /*  9 */
I (184373) MATH_INT_T: Peek Z.dp[10] = 0x00000000;  /* 10 */
I (184383) MATH_INT_T: Peek Z.dp[11] = 0x00000000;  /* 11 */
I (184383) MATH_INT_T: Peek Z.dp[12] = 0x00000000;  /* 12 */
I (184393) MATH_INT_T: Peek Z.dp[13] = 0x00000000;  /* 13 */
I (184393) MATH_INT_T: Peek Z.dp[14] = 0x00000000;  /* 14 */
I (184403) MATH_INT_T: Peek Z.dp[15] = 0x00000000;  /* 15 */
I (184413) MATH_INT_T: Peek Z.dp[16] = 0x0b0df8ae;  /* 16 */
I (184413) MATH_INT_T: Peek Z.dp[17] = 0x308db72d;  /* 17 */
I (184423) MATH_INT_T: Peek Z.dp[18] = 0x76fca0a3;  /* 18 */
I (184433) MATH_INT_T: Peek Z.dp[19] = 0x2aa4a880;  /* 19 */
I (184433) MATH_INT_T: Peek Z.dp[20] = 0x296f7f92;  /* 20 */
I (184443) MATH_INT_T: Peek Z.dp[21] = 0x908d20e3;  /* 21 */
I (184453) MATH_INT_T: Peek Z.dp[22] = 0xb11c1dc1;  /* 22 */
I (184453) MATH_INT_T: Peek Z.dp[23] = 0xf5e97df6;  /* 23 */
I (184463) MATH_INT_T: Peek Z.dp[24] = 0x00000000;  /* 24 */
I (184473) MATH_INT_T: Peek Z.dp[25] = 0x00000000;  /* 25 */
I (184473) MATH_INT_T: Peek Z.dp[26] = 0x00000000;  /* 26 */
I (184483) MATH_INT_T: Peek Z.dp[27] = 0x00000000;  /* 27 */
I (184483) MATH_INT_T: Peek Z.dp[28] = 0x00000000;  /* 28 */
I (184493) MATH_INT_T: Peek Z.dp[29] = 0x00000000;  /* 29 */
I (184503) MATH_INT_T: Peek Z.dp[30] = 0x00000000;  /* 30 */
I (184503) MATH_INT_T: Peek Z.dp[31] = 0x00000000;  /* 31 */
I (184513) MATH_INT_T: Peek Z.dp[32] = 0x00000000;  /* 32 */
I (184523) MATH_INT_T: Peek Z.dp[33] = 0x00000000;  /* 33 */
I (184523) MATH_INT_T: Peek Z.dp[34] = 0x00000000;  /* 34 */
I (184533) MATH_INT_T: Peek Z.dp[35] = 0x00000000;  /* 35 */
I (184543) MATH_INT_T: Peek Z.dp[36] = 0x00000000;  /* 36 */
I (184543) MATH_INT_T: Peek Z.dp[37] = 0x00000000;  /* 37 */
I (184553) MATH_INT_T: Peek Z.dp[38] = 0x00000000;  /* 38 */
I (184563) MATH_INT_T: Peek Z.dp[39] = 0x00000000;  /* 39 */
I (184563) MATH_INT_T: Peek Z.dp[40] = 0x00000000;  /* 40 */
I (184573) MATH_INT_T: Peek Z.dp[41] = 0x00000000;  /* 41 */
I (184573) MATH_INT_T: Peek Z.dp[42] = 0x00000000;  /* 42 */
I (184583) MATH_INT_T: Peek Z.dp[43] = 0x00000000;  /* 43 */
I (184593) MATH_INT_T: Peek Z.dp[44] = 0x00000000;  /* 44 */
I (184593) MATH_INT_T: Peek Z.dp[45] = 0x00000000;  /* 45 */
I (184603) MATH_INT_T: Peek Z.dp[46] = 0x00000000;  /* 46 */
I (184613) MATH_INT_T: Peek Z.dp[47] = 0x00000000;  /* 47 */
I (184613) MATH_INT_T: Peek Z.dp[48] = 0x00000000;  /* 48 */
I (184623) MATH_INT_T: Peek Z.dp[49] = 0x00000000;  /* 49 */
I (184633) MATH_INT_T: Peek Z.dp[50] = 0x00000000;  /* 50 */
I (184633) MATH_INT_T: Peek Z.dp[51] = 0x00000000;  /* 51 */
I (184643) MATH_INT_T: Peek Z.dp[52] = 0x00000000;  /* 52 */
I (184653) MATH_INT_T: Peek Z.dp[53] = 0x00000000;  /* 53 */
I (184653) MATH_INT_T: Peek Z.dp[54] = 0x00000000;  /* 54 */
I (184663) MATH_INT_T: Peek Z.dp[55] = 0x00000000;  /* 55 */
I (184663) MATH_INT_T: Peek Z.dp[56] = 0x00000000;  /* 56 */
I (184673) MATH_INT_T: Peek Z.dp[57] = 0x00000000;  /* 57 */
I (184683) MATH_INT_T: Peek Z.dp[58] = 0x00000000;  /* 58 */
I (184683) MATH_INT_T: Peek Z.dp[59] = 0x00000000;  /* 59 */
I (184693) MATH_INT_T: Peek Z.dp[60] = 0x00000000;  /* 60 */
I (184703) MATH_INT_T: Peek Z.dp[61] = 0x00000000;  /* 61 */
I (184703) MATH_INT_T: Peek Z.dp[62] = 0x00000000;  /* 62 */
I (184713) MATH_INT_T: Peek Z.dp[63] = 0x00000000;  /* 63 */
I (184723) MATH_INT_T: Peek Z.dp[64] = 0x00000000;  /* 64 */
I (184723) MATH_INT_T: Peek Z.dp[65] = 0x00000000;  /* 65 */
I (184733) MATH_INT_T: Peek Z.dp[66] = 0x00000000;  /* 66 */
I (184743) MATH_INT_T: Peek Z.dp[67] = 0x00000000;  /* 67 */
I (184743) MATH_INT_T: Peek Z.dp[68] = 0x00000000;  /* 68 */
I (184753) MATH_INT_T: Peek Z.dp[69] = 0x00000000;  /* 69 */
I (184753) MATH_INT_T: Peek Z.dp[70] = 0x00000000;  /* 70 */
I (184763) MATH_INT_T: Peek Z.dp[71] = 0x00000000;  /* 71 */
I (184773) MATH_INT_T: Peek Z.dp[72] = 0x00000000;  /* 72 */
I (184773) MATH_INT_T: Peek Z.dp[73] = 0x00000000;  /* 73 */
I (184783) MATH_INT_T: Peek Z.dp[74] = 0x00000000;  /* 74 */
I (184793) MATH_INT_T: Peek Z.dp[75] = 0x00000000;  /* 75 */
I (184793) MATH_INT_T: Peek Z.dp[76] = 0x00000000;  /* 76 */
I (184803) MATH_INT_T: Peek Z.dp[77] = 0x00000000;  /* 77 */
I (184813) MATH_INT_T: Peek Z.dp[78] = 0x00000000;  /* 78 */
I (184813) MATH_INT_T: Peek Z.dp[79] = 0x00000000;  /* 79 */
I (184823) MATH_INT_T: Peek Z.dp[80] = 0x00000000;  /* 80 */
I (184833) MATH_INT_T: Peek Z.dp[81] = 0x00000000;  /* 81 */
I (184833) MATH_INT_T: Peek Z.dp[82] = 0x00000000;  /* 82 */
I (184843) MATH_INT_T: Peek Z.dp[83] = 0x00000000;  /* 83 */
I (184843) MATH_INT_T: Peek Z.dp[84] = 0x00000000;  /* 84 */
I (184853) MATH_INT_T: Peek Z.dp[85] = 0x00000000;  /* 85 */
I (184863) MATH_INT_T: Peek Z.dp[86] = 0x00000000;  /* 86 */
I (184863) MATH_INT_T: Peek Z.dp[87] = 0x00000000;  /* 87 */
I (184873) MATH_INT_T: Peek Z.dp[88] = 0x00000000;  /* 88 */
I (184883) MATH_INT_T: Peek Z.dp[89] = 0x00000000;  /* 89 */
I (184883) MATH_INT_T: Peek Z.dp[90] = 0x00000000;  /* 90 */
I (184893) MATH_INT_T: Peek Z.dp[91] = 0x00000000;  /* 91 */
I (184903) MATH_INT_T: Peek Z.dp[92] = 0x00000000;  /* 92 */
I (184903) MATH_INT_T: Peek Z.dp[93] = 0x00000000;  /* 93 */
I (184913) MATH_INT_T: Peek Z.dp[94] = 0x00000000;  /* 94 */
I (184923) MATH_INT_T: Peek Z.dp[95] = 0x00000000;  /* 95 */
I (184923) MATH_INT_T: Peek Z.dp[96] = 0x00000000;  /* 96 */
I (184933) MATH_INT_T: Peek Z.dp[97] = 0x00000000;  /* 97 */
I (184933) MATH_INT_T: Peek Z.dp[98] = 0x00000000;  /* 98 */
I (184943) MATH_INT_T: Peek Z.dp[99] = 0x00000000;  /* 99 */
I (184953) MATH_INT_T: Peek Z.dp[100] = 0x00000000;  /* 100 */
I (184953) MATH_INT_T: Peek Z.dp[101] = 0x00000000;  /* 101 */
I (184963) MATH_INT_T: Peek Z.dp[102] = 0x00000000;  /* 102 */
I (184973) MATH_INT_T: Peek Z.dp[103] = 0x00000000;  /* 103 */
I (184973) MATH_INT_T: Peek Z.dp[104] = 0x00000000;  /* 104 */
I (184983) MATH_INT_T: Peek Z.dp[105] = 0x00000000;  /* 105 */
I (184993) MATH_INT_T: Peek Z.dp[106] = 0x00000000;  /* 106 */
I (184993) MATH_INT_T: Peek Z.dp[107] = 0x00000000;  /* 107 */
I (185003) MATH_INT_T: Peek Z.dp[108] = 0x00000000;  /* 108 */
I (185013) MATH_INT_T: Peek Z.dp[109] = 0x00000000;  /* 109 */
I (185013) MATH_INT_T: Peek Z.dp[110] = 0x00000000;  /* 110 */
I (185023) MATH_INT_T: Peek Z.dp[111] = 0x00000000;  /* 111 */
I (185033) MATH_INT_T: Peek Z.dp[112] = 0x00000000;  /* 112 */
I (185033) MATH_INT_T: Peek Z.dp[113] = 0x00000000;  /* 113 */
I (185043) MATH_INT_T: Peek Z.dp[114] = 0x00000000;  /* 114 */
I (185053) MATH_INT_T: Peek Z.dp[115] = 0x00000000;  /* 115 */
I (185053) MATH_INT_T: Peek Z.dp[116] = 0x00000000;  /* 116 */
I (185063) MATH_INT_T: Peek Z.dp[117] = 0x00000000;  /* 117 */
I (185073) MATH_INT_T: Peek Z.dp[118] = 0x00000000;  /* 118 */
I (185073) MATH_INT_T: Peek Z.dp[119] = 0x00000000;  /* 119 */
I (185083) MATH_INT_T: Peek Z.dp[120] = 0x00000000;  /* 120 */
I (185093) MATH_INT_T: Peek Z.dp[121] = 0x00000000;  /* 121 */
I (185093) MATH_INT_T: Peek Z.dp[122] = 0x00000000;  /* 122 */
I (185103) MATH_INT_T: Peek Z.dp[123] = 0x00000000;  /* 123 */
I (185113) MATH_INT_T: Peek Z.dp[124] = 0x00000000;  /* 124 */
I (185113) MATH_INT_T: Peek Z.dp[125] = 0x00000000;  /* 125 */
I (185123) MATH_INT_T: Peek Z.dp[126] = 0x00000000;  /* 126 */
I (185133) MATH_INT_T: Peek Z.dp[127] = 0x00000000;  /* 127 */
I (185133) MATH_INT_T:
I (185143) MATH_INT_T: Z:
I (185143) MATH_INT_T:
I (185143) MATH_INT_T: Z.used = 8;
I (185153) MATH_INT_T: Z.sign = 0;
I (185153) MATH_INT_T: Z.dp[ 0] = 0x2965f9a8;  /*  0 */
I (185163) MATH_INT_T: Z.dp[ 1] = 0x5c30af87;  /*  1 */
I (185163) MATH_INT_T: Z.dp[ 2] = 0xa51c628d;  /*  2 */
I (185173) MATH_INT_T: Z.dp[ 3] = 0x1a2be20e;  /*  3 */
I (185173) MATH_INT_T: Z.dp[ 4] = 0x6e00ab9d;  /*  4 */
I (185183) MATH_INT_T: Z.dp[ 5] = 0x53c9b40b;  /*  5 */
I (185193) MATH_INT_T: Z.dp[ 6] = 0x5d91a864;  /*  6 */
I (185193) MATH_INT_T: Z.dp[ 7] = 0x0aa34866;  /*  7 */
I (185203) MATH_INT_T:
I (185203) MATH_INT_T: Z2:
I (185203) MATH_INT_T:
I (185213) MATH_INT_T: Z2.used = 16;
I (185213) MATH_INT_T: Z2.sign = 0;
I (185223) MATH_INT_T: Z2.dp[ 0] = 0x528aa4c4;  /*  0 */
I (185223) MATH_INT_T: Z2.dp[ 1] = 0xc4b6f6e9;  /*  1 */
I (185233) MATH_INT_T: Z2.dp[ 2] = 0xdcf281a0;  /*  2 */
I (185233) MATH_INT_T: Z2.dp[ 3] = 0x4b7d6962;  /*  3 */
I (185243) MATH_INT_T: Z2.dp[ 4] = 0x41a653a6;  /*  4 */
I (185253) MATH_INT_T: Z2.dp[ 5] = 0x89e90487;  /*  5 */
I (185253) MATH_INT_T: Z2.dp[ 6] = 0xa93b4630;  /*  6 */
I (185263) MATH_INT_T: Z2.dp[ 7] = 0xcd1d1087;  /*  7 */
I (185263) MATH_INT_T: Z2.dp[ 8] = 0x36e8974f;  /*  8 */
I (185273) MATH_INT_T: Z2.dp[ 9] = 0x23ba3efb;  /*  9 */
I (185283) MATH_INT_T: Z2.dp[10] = 0x57343914;  /* 10 */
I (185283) MATH_INT_T: Z2.dp[11] = 0xf3aa08c1;  /* 11 */
I (185293) MATH_INT_T: Z2.dp[12] = 0xfdcdec21;  /* 12 */
I (185293) MATH_INT_T: Z2.dp[13] = 0x22f1d6a2;  /* 13 */
I (185303) MATH_INT_T: Z2.dp[14] = 0x93d03c89;  /* 14 */
I (185313) MATH_INT_T: Z2.dp[15] = 0x3325841c;  /* 15 */
I (185313) MATH_INT_T:
W (185323) wolfssl_esp32_mp: Recovering mp_mul error with softwa
re result
